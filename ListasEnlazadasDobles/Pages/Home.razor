@page "/"

@using Listas.Services
@inject IJSRuntime JSRuntime

<h3>Gestión de Lista Enlazada Simple</h3>

<div>
    <label for="valorNodo">Valor del Nodo:</label>
    <input type="number" id="valorNodo" @bind="valorNodo" />
</div>

<button @onclick="AgregarAlInicio">Agregar al Inicio</button>
<button @onclick="EliminarAntesDe">Eliminar Antes De</button>
<button @onclick="EliminarDespuesDe">Eliminar Después De</button>

@if (listaEnlazada != null)
{
    <h4>Nodos en la Lista:</h4>
    <ul>
        @foreach (var nodo in listaEnlazada)
        {
            <li>@nodo.Valor</li>
        }
    </ul>
}

@code {
    private ListaEnlazadaSimple listaEnlazada = new ListaEnlazadaSimple();
    private int valorNodo;
    private int posicion;

    private void AgregarAlInicio()
    {
        listaEnlazada.InsertarNodoAlInicio(valorNodo);
        valorNodo = 0; // Resetear el valor del nodo después de agregarlo.
    }

    private void EliminarAntesDe()
    {
        try
        {
            listaEnlazada.EliminarNodoAntesDe(posicion);
        }
        catch (Exception ex)
        {
            JSRuntime.InvokeVoidAsync("alert", ex.Message);
        }
    }

    private void EliminarDespuesDe()
    {
        try
        {
            listaEnlazada.EliminarNodoDespuesDe(posicion);
        }
        catch (Exception ex)
        {
            JSRuntime.InvokeVoidAsync("alert", ex.Message);
        }
    }
}
